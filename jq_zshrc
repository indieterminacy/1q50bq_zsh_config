# # Lines configured by zsh-newuser-install
# # Not sure If I banjqxed UZ
autoload -Uz compinit
compinit
#
# End of lines added by compinstall
#
# For Adding Tmuxinator Functionality
# source $HOME/.bin/tmuxinator.zsh

source $HOME/.zplug/init.zsh

if [ -f '$HOME/.fzf.zsh' ]; then
    . "$HOME/.fzf.zsh"
fi
####################
# oq Sundry
####################
# https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/pj
########################################
# 10_Activity
########################################
#
#  Sane bindings for zsh's vi mode so it behaves more vim like
#  https://github.com/sharat87/zsh-vim-mode
####################
# rq Install
####################
# Install plugins if there are plugins that have not been installed
if ! zplug check --verbose; then
    printf "Install? [y/N]: "
    if read -q; then
        echo; zplug install
    fi
fi

# ZPLUG_CLONE_DEPTH=0
zstyle ':zplug:tag' depth 0
zplug load --verbose
# nq Package Manager
# oq linux
# https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/command-not-found

#####################
# nq Package Managers
#####################
source $HOME/5q_env-qiuy/60_System/nq_package-managers/oq_zsh/oqo_package_managers.zsh

#####################
# Deleted file, to rebase
# $HOME/60o_Control_Qiuy/10_Activity/rq_
# if [ -f '$HOME/10_Activity/10r_Initiatives/10r_Installing/60o_Shell_Qiuy/60o_ZSH/50j_Settings/50i_Production/sq50j-settings-install-zsh' ]; then
#     . '$HOME/10_Activity/10r_Initiatives/10r_Installing/60o_Shell_Qiuy/60o_ZSH/50j_Settings/50i_Production/sq50j-settings-install-zsh'
#     # break
# fi
#####################
####################
# iq State
# oq Python
####################
#  Virtualfish-alike Python virtualenv wrapper for Zsh
# https://github.com/aperezdc/virtualz

####################
# oq Stack
####################
# https://github.com/robbyrussell/oh-my-zsh/blob/master/plugins/stack/stack.plugin.zsh

####################
# sq10r_loading
####################
source $HOME/4q50nqn_pathways/oq_zsh/5q50iqi_jq_loading_configurations/oqo_loading.zsh

####################
# iq compiling
####################
source $HOME/4q50nqn_pathways/oq_zsh/6q50iqi_jq_compiling_configurations/oqo_compiling.zsh

####################
# rq Tasks
####################
####################
# oq Taskwarrior
####################
# https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/taskwarrior

########################################
# iq copying
########################################
source $HOME/4q50nqn_pathways/oq_zsh/5q50xq_oqo_copying_plugins/xq_copying.zsh

########################################
# xq encoding
########################################
source $HOME/4q50nqn_pathways/oq_zsh/5q50xq_oqo_encoding_plugins/xq_encoding.zsh

####################
# iq Selecting
####################
source $HOME/4q50nqn_pathways/oq_zsh/5q50dqd_oqo_selecting_plugins/iq_select.zsh

####################
# uq notifications
####################
source $HOME/4q50nqn_pathways/oq_zsh/5q40iqi_oqo_notifications_plugins/tq_notifications.zsh

####################
# tq history
####################
source $HOME/4q50nqn_pathways/oq_zsh/5q10iqi_oqo_history_plugins/oqo_history.zsh

####################
# uq searching
####################
# Identify other file in folder
source $HOME/5q_env-qiuy/50_Environment/uq_searching/oq_zsh/oqo_plugins/oqo_search.zsh

####################
# bq transferring
####################
source $HOME/60o_Flow_Qiuy/40_Movement/bq_transferring/oq_shell/oq_zsh/oqo_plugins/iqi_production/oqo_transferring.zsh

####################
# bq sourcing
####################
source /home/masterp47/60o_Control_Qiuy/50_Environment/iq_sourcing/oq_shell/oq_zsh/oqo_plugins/iqi_production/oqo_sourcing.zsh

####################
# bq hooks
####################
source $HOME/60o_Flow_Qiuy/50_Environment/bq_hooks/oq_shell/oq_zsh/oqo_plugins/iqi_production/oqo_hooks.zsh

####################
# iq testing
####################
source $HOME/60o_Control_Qiuy/50_Environment/nq_testing/oq_shell/oq_zsh/oqo_plugins/iqi_production/nq_testing.zsh

####################
# iq contexts
####################
# https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/virtualenvwrapper
# https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/virtualenv

####################
# iq permissions
####################
source $HOME/60o_Control_Qiuy/50_Environment/iq_access/iq_permissions/oq_shell/oq_zsh/oqo_plugins/iqi_production/oqo_permissions.zsh

####################
# sq60k-databases
####################
source $HOME/60o_Doc_Qiuy/60_System/mq_databases/oq_shell/oq_zsh/oqo_plugins/iqi_production/oqo_databases.zsh

####################
# 60k_Formats
####################
source $HOME/60o_Doc_Qiuy/60_System/kq_formats/oq_shell/oq_zsh/oqo_plugins/iqi_production/oqo_formats.zsh

####################
# zq60m_languages
####################
source $HOME/6q_tools-qiuy/60_System/mq_languages/oq_go/oqo_plugins/jq_oq_configuration_go.zsh
source $HOME/6q_tools-qiuy/60_System/mq_languages/oq_javascript/oqo_plugins/jq_oqo_configuration_grunt.zsh
source $HOME/6q_tools-qiuy/60_System/mq_languages/oq_javascript/oqo_plugins/jq_oqo_configuration_gulp.zsh
source $HOME/6q_tools-qiuy/60_System/mq_languages/oq_lua/oqo_plugins/jq_oq_configuration_lua.zsh
source $HOME/6q_tools-qiuy/60_System/mq_languages/oq_perl/oqo_plugins/jq_oq_configuration_perl.zsh
source $HOME/6q_tools-qiuy/60_System/mq_languages/oq_php/oqo_plugins/jq_oq_configuration_php.zsh
source $HOME/6q_tools-qiuy/60_System/mq_languages/oq_python/oqo_plugins/jq_oq_configuration_python.zsh
source $HOME/6q_tools-qiuy/60_System/mq_languages/oq_ruby/oqo_plugins/jq_oq_configuration_ruby.zsh

###################
# 60o_Duell
####################
#  The Duell Tool is a command line tool for setting up, building and running
#  applications on any platform.
#  Oh My ZSH plugin for the duell tool
# https://github.com/jcxavier/oh-my-zsh-duell
####################
# 60o_Docker
####################
#  ZSH plugin that display status of project containers
# https://github.com/sroze/docker-compose-zsh-plugin

# https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/docker-compose
# https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/docker

#  docker-enter command shell completion
# https://github.com/primait/docker-enter-completion

#  oh-my-zsh plugin with docker convenience functions
# https://github.com/johnlabarge/docker_fun

#  Miscellaneous utility scripts and aliases for use with Docker.
# https://github.com/unixorn/docker-helpers.zshplugin

#  zsh completion for docker
# https://github.com/felixr/docker-zsh-completion
#
#This will add docker completion for docker and currently support displaying
#the list of containers and images. If you make any changes, please feel free
#to pull request !
#https://github.com/srijanshetty/docker-zsh

########################################
# A collection of some ZSH scripts
# zplug "jsks/zsh-plugins"
########################################

# 'Not loaded'
# zplug "lib/clipboard", from:oh-my-zsh, if:"[[ $OSTYPE == *darwin* ]]"

# zplug "mollifier/anyframe", commit:4c23cb60


# Group dependencies, emoji-cli depends on
# jq in this example
# zplug "stedolan/jq", \
#     from:gh-r \
#     # from:gh-r, \
#     as:command, \
#     rename-to:jq
# zplug "b4b4r07/emoji-cli", \
#     on:"stedolan/jq"

# # Group dependencies. Load emoji-cli if jq is installed in this example
# zplug "stedolan/jq", \
#     from:gh-r \
#     as:command, \
#     rename-to:jq
# zplug "b4b4r07/emoji-cli", \
#     on:"stedolan/jq"

########################################
# This repo contains some useful plugins for oh-my-zsh.
# Including nginx, lesscss, memcached
# https://github.com/miklos-martin/oh-my-zsh-plugins
#  Zsh grunt plugin https://github.com/clauswitt/zsh-grunt-plugin
#https://github.com/yonchu/grunt-zsh-completion
# Zsh grunt plugin
#https://github.com/clauswitt/zsh-grunt-plugin

#gvm (Go version manager) plugin for zsh
#https://github.com/horosgrisa/zsh-gvm

########################################
# UNSetting, need to tighten
# bindkey '^xb' anyframe-widget-cdr
# bindkey '^x^b' anyframe-widget-checkout-git-branch
#
# bindkey '^xr' anyframe-widget-execute-history
# bindkey '^x^r' anyframe-widget-execute-history
#
# bindkey '^xi' anyframe-widget-put-history
# bindkey '^x^i' anyframe-widget-put-history
#
# bindkey '^xg' anyframe-widget-cd-ghq-repository
# bindkey '^x^g' anyframe-widget-cd-ghq-repository
#
# bindkey '^xk' anyframe-widget-kill
# bindkey '^x^k' anyframe-widget-kill
#
# bindkey '^xe' anyframe-widget-insert-git-branch
# bindkey '^x^e' anyframe-widget-insert-git-branch

########################################

# Requirement
#
# Some widgets requires external commands.
# anyframe-widget-cdr
#
# require cdr
#
# To use cdr, add the following line to your .zshrc:

# autoload -Uz chpwd_recent_dirs cdr add-zsh-hook
# add-zsh-hook chpwd chpwd_recent_dirs


# expressly specify to use fzf
# Debug
# zplug ":anyframe:selector:" use fzf

# specify path and options for peco, percol, or fzf
# Debug
# zplug ":anyframe:selector:fzf:" command 'fzf --extended'
##################
# hq_navigating
##################

 #zsh automatic complete-word and list-choices. Originally incr-0.2.zsh by
 #y.fujii <y-fujii at mimosa-pudica.net>
# https://github.com/hchbaw/auto-fu.zsh

# Autoenv automatically sources (known/whitelisted) .env and .out files.
# https://github.com/horosgrisa/autoenv
#  Autoenv for zsh
#https://github.com/Tarrasch/zsh-autoenv

# Bash, Zsh and fish completion support for git-flow.
#https://github.com/bobthecow/git-flow-completion

#  browse-commit is an oh-my-zsh plugin that lets you open any commit in your browser from the command line.
# https://github.com/adolfoabegg/browse-commit

#  zsh calculator - with support for basic math
# TODO Check functionality
# zplug "arzzen/calc.plugin.zsh", from:oh-my-zsh
#a ZSH Plugin that does basic statistical analysis
#https://github.com/vladmrnv/statify

#####################################
#  Add zsh's missing hooks, and support for user-defined hooks
# https://github.com/willghatch/zsh-hooks

#  Convert seconds to a human readable string: 165392 → 1d 21h 56m 32s
# https://github.com/sindresorhus/pretty-time-zsh

#  A oh-my-zsh plugin for robo command completion.
# https://github.com/shengyou/robo-zsh-plugin

#

#  Zsh safe-paste plugin for antigen. See http://cirw.in/blog/bracketed-paste
# https://github.com/oz/safe-paste
# http://cirw.in/blog/bracketed-paste

#  Sane options for zsh, in the spirit of vim-sensible.
# https://github.com/willghatch/zsh-saneopt

#  ZSH plugin to open pull requests from command line.
#  https://github.com/caarlos0/zsh-open-pr

#  ZSH plugin for Symfomy2.
# https://github.com/voronkovich/sf2.plugin.zsh
# Oh My Zsh plugin for the Symfony Console component
#https://github.com/mnapoli/zsh-symfony-console-plugin

# zsh plugin that runs ls and git status after chpwd
# https://github.com/dbkaplun/smart-cd
# http://www.refining-linux.org/archives/42/ZSH-Gem-8-Hook-function-chpwd/

#  Snippet expansion for zsh
# https://github.com/willghatch/zsh-snippets
# http://zshwiki.org/home/examples/zleiab

#https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/man

#  View vim plugin manuals (help) like man in zsh
# https://github.com/yonchu/vimman

#  Yeoman plugin for Oh My ZSH, compatible with yeoman version ≥1.0 (options and command auto-completion).
# https://github.com/edouard-lopez/yeoman-zsh-plugin
#

#  zsh anything.el-like widget.
# https://github.com/zsh-users/zaw



#  zsh information line plugin
# https://github.com/kmhjs/zinfo_line

#  ZSH plugin to enhance the terminal environment with 256 colors
# zplug "chrissicool/zsh-256color"

#  Because your terminal should be able to perform tasks asynchronously without external tools!
# https://github.com/mafredri/zsh-async


#  Fish-like autosuggestions for zsh
#  Seems broken because of configuration issues
# zplug "zsh-users/zsh-autosuggestions", \
    # as:command, \
    # from:gh-r
    # from:oh-my-zsh

#  Bash compatibility plugin for ZSH
# https://github.com/chrissicool/zsh-bash


#  ZSH Do What I Mean http://blog.patshead.com/2012/10/cleanup-of-zsh-dwim.html
#https://github.com/oknowton/zsh-dwim

# Sane, sophisticated command line editing
# https://github.com/psprint/zsh-editing-workbench


#  Build commands from what's in history and at prompt
# https://github.com/psprint/zsh-cmd-architect

#  Higher order functions for zsh
# https://github.com/Tarrasch/zsh-functional

#  Easily display non-completable trivia right under your editing buffer
# https://github.com/joepvd/zsh-hints

#  ZSH port of Fish shell's history search feature. https://sunaku.github.io/switching-from-fish-to-zsh.html
# https://github.com/zsh-users/zsh-history-substring-search

#  manydots-magic - zle tweak for emulating `...'==`../..' etc.
# https://github.com/knu/zsh-manydots-magic

#  customized plugin for maven, moving to antigen from oh-my-zsh
# https://github.com/KyleChamberlin/zsh_maven_plugin
# My Zsh plugin for Maven
#https://github.com/lesaint/lesaint-mvn

#############################
# oq Node
#############################
# https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/node
# https://github.com/poying/zsh-nodejs-plugin

#  Node plugin for antigen derivatives
#https://github.com/srijanshetty/node.plugin.zsh
#https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/node
#https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/npm
#https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/nvm
#############################

#  Automatically add $HOME/opt/*/bin to $PATH
# https://github.com/jreese/zsh-opt-path

#  A ZSH plugin with utility functions to work with PostgreSQL.
# https://github.com/caarlos0/zsh-pg

#  ZSH plugin that re-enters working directory if it has been removed and re-created.
# https://github.com/RobSis/zsh-reentry-hook


#  ZSH plugin to open Travis CI page for the current repo
# https://github.com/denolfe/zsh-travis
######################
#  Sane bindings for zsh's vi mode so it behaves more vim like
# https://github.com/sharat87/zsh-vim-mode

#  A port of Bashmarks (simple bookmarking plugin by Todd Werth) for oh-my-zsh
# https://github.com/jocelynmallon/zshmarks

#  Zsh session restoration
# https://github.com/psprint/zsnapshot

#  Debugger for zsh (at least 4.3.6-dev-2)
# https://github.com/rocky/zshdb

#  An oh-my-zsh plugin for displaying dirstack info on a single line.
# https://github.com/gepoch/oh-my-zsh-dirstack

#  Yet another virtualenv prompt plugin of oh-my-zsh.
# https://github.com/tonyseek/oh-my-zsh-virtualenv-prompt


#  A simple zsh plugin for Watson.
# https://github.com/bcho/Watson.zsh

#  function wrapper plugin for oh-my-zsh
# https://github.com/hlohm/mfunc

# The wrapper zsh function of mysql command. Support flexible MySQL CLI prompt.
#https://github.com/tetsujin/zsh-function-mysql
#
#  Colorization for mysql
# https://github.com/horosgrisa/mysql-colorize

#  ZSH plugin for MySql.
# https://github.com/voronkovich/mysql.plugin.zsh

#  ZSH plugin that maps exit status code to human readable string
# https://github.com/bric3/nice-exit-code

########################
#  Easy setup of cdr for zsh.
# https://github.com/willghatch/zsh-cdr

#  ranger-clone in POSIX shell
# https://github.com/hut/lscd

#  :rocket: A next-generation cd command with an interactive filter
# https://github.com/b4b4r07/enhancd

#  An oh-my-zsh plugin that helps to use, create and maintain a list of shell locations
# https://github.com/or17191/going_places
########################

#  zsh/zle widget to transform grep commands to awk commands
#https://github.com/joepvd/grep2awk

#  Demo of hot stuff in the Zsh
# https://github.com/mika/zsh-pony

#  Oh My Zsh plugin for BOSH autocompletion
# https://github.com/krujos/bosh-zsh-autocompletion

#  Cloud Foundry CLI zsh complete plugin
# https://github.com/frodenas/cf-zsh-autocomplete-plugin

#  A oh-my-zsh plugin for codeception command completion.
# https://github.com/shengyou/codeception-zsh-plugin


########################
#  Drush ZSH Completion. Please follow on drupal.org http://drupal.org/sandbox/webflo/1113394
# https://github.com/webflo/drush_zsh_completion

#  etcdctl autocomplete plugin for oh-my-zsh.
# https://github.com/sheax0r/etcdctl-zsh

#  Grid'5000 plugin for oh-my-zsh
# https://www.grid5000.fr/mediawiki/index.php/Grid5000:Home

########################
#  Autocompletion support for your gulp.js tasks (zsh).
# https://github.com/akoenig/gulp.plugin.zsh

#  Autocompletion for your gulp.js tasks in the Z-Shell (zsh).
# https://github.com/srijanshetty/gulp-autocompletion-zsh

#  A shell script to make your prompt pretty and useful. Works with bash & zsh,
#  git & hg.
# https://github.com/dotcode/multi-shell-repo-prompt

########################
#  Zsh plugin which add completion to NVM
# https://github.com/tomsquest/nvm-completion.zsh

#  Nvm plugin for Oh my ZSH
# https://github.com/olesu/oh-my-zsh-plugin-nvm

#  Nvm plugin for Oh my ZSH
#https://github.com/olesu/oh-my-zsh-plugin-nvm

#  Additional completion definitions for Zsh.
# https://github.com/zsh-users/zsh-completions

########################
#  Fish-like autosuggestions for zsh
# https://github.com/zsh-users/zaw

#  zsh anything.el-like widget.
# https://github.com/zsh-users/zaw

#  Friendly Interactive ZSHell.
# https://github.com/zsh-users/fizsh

########################

# https://github.com/racket/shell-completion

#  Generating zsh completion function from getopt-style help text.
# https://github.com/RobSis/zsh-completion-generator

# zsh completion plugin for The InterPlanetary File System (IPFS)
# https://github.com/aramboi/zsh-ipfs

#  Packer Plugin for Zsh
#  https://github.com/wakeful/zsh-packer

# https://github.com/Sorbing/oh-my-zsh/commit/62bee9aa82aadfdc033bc44c624f78c07af10062

########################################
# 50n Access
########################################
########################################
# oq GPG_Agent
########################################
#https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/gpg-agent
#https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/pass
########################################
# Safely store secrets in a VCS repo (i.e. Git, Mercurial, Subversion or
# Perforce).
#https://github.com/StackExchange/blackbox
#
# A bash-tool to store your private data inside a git
#repository.
#https://github.com/sobolevn/git-secret
#
